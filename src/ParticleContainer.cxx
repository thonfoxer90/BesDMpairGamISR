

#include "BesDMpairGamISR/ParticleContainer.h"

using namespace Event;

//----------------------------------------------------------------------------------------------------------
cParticleContainer::cParticleContainer()
//----------------------------------------------------------------------------------------------------------
{
  m_sName      = "FourVect";
  m_bIsPhoton  = false;
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
cParticleContainer::cParticleContainer(const std::string& name,bool bIsPhoton)
//----------------------------------------------------------------------------------------------------------
{
  m_sName      = name;
  m_bIsPhoton  = bIsPhoton;
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::AttachToNtuple(NTuple::Tuple* pTuple)
//----------------------------------------------------------------------------------------------------------
{
  pTuple->addItem(m_sName+"E"     ,m_dEnergy);
  if (!m_bIsPhoton) {pTuple->addItem(m_sName+"P"     ,m_dMomentum);}
  pTuple->addItem(m_sName+"Theta" ,m_dTheta);
  pTuple->addItem(m_sName+"Phi"   ,m_dPhi);
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::AttachToNtuple(NTuple::Tuple* pTuple,const std::string& name,bool bIsPhoton)
//----------------------------------------------------------------------------------------------------------
{
  m_sName      = name;
  m_bIsPhoton  = bIsPhoton;
  if (!m_bIsPhoton) {pTuple->addItem(m_sName+"P",m_dMomentum);}
  pTuple->addItem(m_sName+"E"     ,m_dEnergy);
  pTuple->addItem(m_sName+"Theta" ,m_dTheta);
  pTuple->addItem(m_sName+"Phi"   ,m_dPhi);
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::Fill(double dEnergy,double dMomentum,double dTheta,double dPhi)
//----------------------------------------------------------------------------------------------------------
{
  m_dEnergy   = dEnergy;
  if (!m_bIsPhoton) {m_dMomentum = dMomentum;}
  m_dTheta    = dTheta;
  m_dPhi      = dPhi;
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::Fill(const CLHEP::HepLorentzVector* lv)
//----------------------------------------------------------------------------------------------------------
{
  m_dEnergy   = lv->e();
  if (!m_bIsPhoton) {m_dMomentum = lv->rho();}
  m_dTheta    = lv->theta();
  m_dPhi      = lv->phi();
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::FillFromEMC(RecEmcShower* shower)
//----------------------------------------------------------------------------------------------------------
{
  m_dEnergy   = shower->energy();
  m_dTheta    = shower->theta();
  m_dPhi      = shower->phi();
}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
void cParticleContainer::Clear()
//----------------------------------------------------------------------------------------------------------
{
  m_dEnergy   = -1;
  if (!m_bIsPhoton) {m_dMomentum = -1;}
  m_dTheta    = -4;
  m_dPhi      = -4;
}
//----------------------------------------------------------------------------------------------------------



